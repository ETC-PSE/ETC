/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etc;

/**
 * Book Lesson form page
 * @author sures 
 */

import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
import java.text.AttributedCharacterIterator;
import java.text.DateFormat;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
public class BookLesson extends javax.swing.JPanel implements ListSelectionListener {

    /**
     * Creates new form BookLesson1
     */
    private String name;
    private String id;
    String command;
    List<String> tutors = new ArrayList<String>();
    DefaultListModel model;
    
    public BookLesson(String ID, String name, String command) {
        initComponents();
        this.id = ID;
        this.name = name;
        this.command = command;
        processCommand(command);
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        subjectList = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        TutorList = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Hours = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        Minutes = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jLabel2.setText("    Subjects");

        subjectList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Subject", "English Comprehension", "English Writing", "Maths", "Numerical Reasoning", "Verbal Reasoning", "Non-verbal Reasoning" }));
        subjectList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectListActionPerformed(evt);
            }
        });

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jScrollPane2, org.jdesktop.beansbinding.ObjectProperty.create(), TutorList, org.jdesktop.beansbinding.BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(TutorList);

        jLabel4.setText("    Tutors");

        jButton2.setText("Book");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Time");

        jLabel3.setText("Date");

        Hours.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        Hours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HoursActionPerformed(evt);
            }
        });

        jLabel5.setText("Hrs");

        Minutes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "30" }));

        jLabel6.setText("Min");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(348, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(210, 210, 210))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Hours, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Minutes, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)))
                        .addGap(71, 71, 71))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(subjectList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(345, 345, 345)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Hours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(Minutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(subjectList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGap(49, 49, 49)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGap(234, 234, 234)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(212, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String selectedBook = "   ";
        String message = null;
        String tutid =  "    ";
        selectedBook   = "none" ;
        String selectedTutor = "";
        String date = "";
        //Validate tutor
        try{
            selectedTutor   = TutorList.getSelectedValue().toString();
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Please select tutor");
            return;
        }
        // Validate Date
        SimpleDateFormat sdf   = new SimpleDateFormat("dd-MM-yyyy");
        try{
            date            = sdf.format(jDateChooser1.getDate());
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Please select date");
            return;   
        }
        
        message = "Do you want to book the lesson?";
        if("ORDERBOOK".equals(command)){
            selectedBook   = TutorList.getSelectedValue().toString();
            message = "Do you want to order the book?";
        }
        int choice = JOptionPane.showConfirmDialog(null,message,"",JOptionPane.OK_CANCEL_OPTION);
        if(choice == 2)
            return;
        String selectedSubject = subjectList.getSelectedItem( ).toString();
        
        int tutorindex         = TutorList.getSelectedIndex();
        String hours           = Hours.getSelectedItem().toString();
        String minutes         = Minutes.getSelectedItem().toString();
        String stdstatus       = "Booked";
        String tutstatus       = "     ";
        String index           = "0";        
        if("ORDERBOOK" != command)
            tutid           = tutors.get(tutorindex);
        etcDataManager etc     = new etcDataManager( );
        
        etc.addLessonInfo(id,name,selectedSubject, date, hours, minutes,selectedTutor,stdstatus,tutstatus,tutid,selectedBook,index,command);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void subjectListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectListActionPerformed

        String labelText = jLabel4.getText();
        if("Tutors".equals(labelText)){
           selectTutors(); 
        }else{
            selectBook();
        }
             
    }//GEN-LAST:event_subjectListActionPerformed

    private void HoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HoursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HoursActionPerformed
    
    public void processCommand(String command){
        
        if("BOOKLESSON".equals(command)){
           jLabel4.setText("Tutors"); 
        }else{
           jLabel4.setText("Books"); 
           jLabel1.setText(null);
           jLabel5.setText(null);
           jLabel6.setText(null);
           Hours.setVisible(false);
           Minutes.setVisible(false);
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Hours;
    private javax.swing.JComboBox Minutes;
    private javax.swing.JList TutorList;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox subjectList;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private boolean select(JFormattedTextField ftf, AttributedCharacterIterator iterator, DateFormat.Field field) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void selectBook() {
        model = new DefaultListModel();
        Object sub = subjectList.getSelectedItem();
        String subject = sub.toString();
        
        switch (subject){
            case "English Comprehension":
                
            model.addElement("Global Eng Comph");
            model.addElement("Expert Eng Comph");
            break;
                
            case "English Writing":
            model.addElement("Effective Eng Wri");
            model.addElement("Practical Eng Wri");
            break;
                
            case "Maths":
            model.addElement("Trignometry");
            model.addElement("Master in Geometry");
            model.addElement("Statistics");
            break;
                
            case "Numerical Reasoning":
            model.addElement("How to Pass Num Reas");
            model.addElement("Improove Your Num Reas");
            break;
                
            case "Verbal Reasoning":
            model.addElement("Modern Approach to Verb Reas");
            model.addElement("Objective Verb Reas");
            break;
                
            case "Non-verbal Reasoning":
            model.addElement("Non-Verbal Reasoning by Chand");
            model.addElement("Non-Verbal Reasoning by Heidi");
            break;
            default:
        }

        TutorList.setModel(model);
        
    }

    private void selectTutors() {
        TutorsData td = new TutorsData();  
        model = new DefaultListModel();
        Object sub = subjectList.getSelectedItem();
        String subject = sub.toString();
        
        switch (subject){
            case "English Comprehension":
                
            model.addElement(TutorsData.tutordata.get(0).tutorname);
            model.addElement(TutorsData.tutordata.get(1).tutorname);
            tutors.add(0,TutorsData.tutordata.get(0).tutorID);
            tutors.add(1,TutorsData.tutordata.get(1).tutorID);
            
            break;
            case "English Writing":
            model.addElement(TutorsData.tutordata.get(1).tutorname);
            model.addElement(TutorsData.tutordata.get(0).tutorname);
            tutors.add(0,TutorsData.tutordata.get(1).tutorID);
            tutors.add(1,TutorsData.tutordata.get(0).tutorID);
            break;
            case "Maths":
            model.addElement(TutorsData.tutordata.get(1).tutorname);
            model.addElement(TutorsData.tutordata.get(3).tutorname);
            model.addElement(TutorsData.tutordata.get(4).tutorname);
            tutors.add(0,TutorsData.tutordata.get(1).tutorID);
            tutors.add(1,TutorsData.tutordata.get(3).tutorID);
            tutors.add(2,TutorsData.tutordata.get(4).tutorID);
            break;
            case "Numerical Reasoning":
            model.addElement(TutorsData.tutordata.get(3).tutorname);
            model.addElement(TutorsData.tutordata.get(4).tutorname);
            tutors.add(0,TutorsData.tutordata.get(3).tutorID);
            tutors.add(1,TutorsData.tutordata.get(4).tutorID);
            break;
            case "Verbal Reasoning":
            model.addElement(TutorsData.tutordata.get(1).tutorname);
            model.addElement(TutorsData.tutordata.get(4).tutorname);
            tutors.add(0,TutorsData.tutordata.get(1).tutorID);
            tutors.add(1,TutorsData.tutordata.get(4).tutorID);
            break;
            case "Non-verbal Reasoning":
            model.addElement(TutorsData.tutordata.get(1).tutorname);
            model.addElement(TutorsData.tutordata.get(2).tutorname);
            tutors.add(0,TutorsData.tutordata.get(1).tutorID);
            tutors.add(1,TutorsData.tutordata.get(2).tutorID);
            break;
            default:
        }

        TutorList.setModel(model);

    }

     
}
