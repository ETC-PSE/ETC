/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package etc;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * Form to change the lesson date, time, author and display number of bookings
 * @author suresh
 */
public class BookingList extends javax.swing.JPanel {

    /**
     * Creates new form BookingList
     */
    public String id;
    private String checkinStatus;
    private int answer;
    String command;
    String idrecg;
    
    public BookingList(String ID, String command) {
        this.id = ID;
        this.command = command;
        idrecg = id.substring(0,2); 
        initComponents();
        
        jInternalFrame1.setVisible(false);
        
        jPanel1.setVisible(false);
        jPanel2.setVisible(true);
//        
        if(("REPORT".equals(command)) || ("TUTREPORT".equals(command))){
           jPanel2.setVisible(false);
           jPanel1.setVisible(true);
           
            if("19".equals(idrecg)){ 
                jPanel3.setVisible(false);
            }
        }
        if(command=="BOOKLIST" || command=="CHECKIN"|| 
           command=="CLASSLIST" || command=="ORDERBOOK" ){
            jButton1.setVisible(false);
            
        }
        if(command=="CHECKIN" ){
            jInternalFrame1.setVisible(true);
        }
        
        
        getBookingListdata( );
        
        
    }
    
    public void getBookingListdata(){
        etcDataManager manager=etcDataManager.createManagerInst();
        List<LessonInfo> searchresult  = manager.searchData(id);
		if(searchresult  == null)
		{
                    JOptionPane.showMessageDialog(null, "No bookings available for your student ID "+id);
		}
		else
		{
                  populateBookingListdata((ArrayList) searchresult);  
		}
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setLayout(new java.awt.CardLayout());

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        jLabel2.setText("Number of Check-Ins : ");

        jLabel3.setText("Number of Lessons Cancelled : ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Report");

        jLabel6.setText("Total Number of Classes");

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable6);

        jLabel4.setText("Number of Books Ordered : ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(163, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(38, 38, 38))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(73, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 836, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(11, 11, 11)
                .addComponent(jLabel6)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        add(jPanel1, "card2");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Booking List");

        jButton1.setText("Modify");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jInternalFrame1.setTitle("Check-In Confirmation");
        jInternalFrame1.setVisible(true);

        jRadioButton2.setForeground(new java.awt.Color(51, 51, 51));
        jRadioButton2.setText("Attend");
        jRadioButton2.setMaximumSize(new java.awt.Dimension(100, 50));
        jRadioButton2.setPreferredSize(new java.awt.Dimension(500, 300));
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton1.setForeground(new java.awt.Color(51, 51, 51));
        jRadioButton1.setText("Cancel");
        jRadioButton1.setPreferredSize(new java.awt.Dimension(100, 50));
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Confirm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(214, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1405, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(202, 202, 202)
                            .addComponent(jButton1))
                        .addComponent(jInternalFrame1))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        add(jPanel2, "card3");
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        getrowdata(id,null);
                            
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        jRadioButton2.setSelected(true);
        jRadioButton1.setSelected(false);

    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jRadioButton1.setSelected(true);
        jRadioButton2.setSelected(false);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int index;
        index = jTable3.getSelectedRow();
        if(index<0){
            JOptionPane.showMessageDialog(null, "Please select row");
            return;
        }
        if((jRadioButton1.isSelected()==true)){
            checkinStatus = "Cancelled";
        } else if(jRadioButton2.isSelected()==true){
            checkinStatus = jRadioButton2.getText();
            
        }
         switch(checkinStatus){
             case "Attend":
                    answer = JOptionPane.showConfirmDialog(null, "Would you like to attend the class?","",JOptionPane.YES_NO_OPTION);
                    break;
             case "Cancelled":
                    answer = JOptionPane.showConfirmDialog(null, "Would you like to cancel the class?","",JOptionPane.YES_NO_OPTION);
                    break;
                    
         }
         
         if(answer==1)
             return;
 
        getrowdata(id,checkinStatus);
        
        getBookingListdata();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    // End of variables declaration//GEN-END:variables

    // Populate booking list data on tables
    private void populateBookingListdata(ArrayList li) {
        
        DefaultTableModel dtm = new DefaultTableModel(0, 0);
        String dyncolumn = "Books";
        if("BOOKLIST".equals(command))
            dyncolumn = "Tutor";
            
        // add header of the table
        String header[] = new String[] { "ID", "Student Name", "Subject",
                    "Date", "Time", "Tutor", "Student Status","Tutor Status","Tutor ID","Books","Index"};

        // add header in table model     
         dtm.setColumnIdentifiers(header);
         
         
        //set model into the table object
         jTable3.setModel(dtm);

        
        fillTutorComboBox();
        filltimecombobox();
        
        //hide tutor id colum for student logon
        jTable3.getColumnModel().getColumn(8).setWidth(0);
        jTable3.getColumnModel().getColumn(8).setMinWidth(0);
        jTable3.getColumnModel().getColumn(8).setMaxWidth(0);
                
        jTable3.getColumnModel().getColumn(10).setWidth(0);
        jTable3.getColumnModel().getColumn(10).setMinWidth(0);
        jTable3.getColumnModel().getColumn(10).setMaxWidth(0); 
        //add rows to the table
        if("ORDERBOOK".equals(command)){ // for only order book
            fillOrderBookData(li,dtm);
        }else if(!("REPORT".equals(command)) || !("TUTREPORT".equals(command))){ // For all commands except commands ORDERBOOK and REPORT
            fillBookListData(li,dtm);
        }
        
        if(("REPORT".equals(command)) || ("TUTREPORT".equals(command))){ // For only report purpose 
            
            DefaultTableModel dtm4 = new DefaultTableModel(0, 0);
            DefaultTableModel dtm5 = new DefaultTableModel(0, 0);
            
            dtm4.setColumnIdentifiers(header);
            dtm5.setColumnIdentifiers(header);
            
            jTable4.setModel(dtm4);
            jTable5.setModel(dtm5);
            
            jTable4.getColumnModel().getColumn(8).setWidth(0);
            jTable4.getColumnModel().getColumn(8).setMinWidth(0);
            jTable4.getColumnModel().getColumn(8).setMaxWidth(0);
            
            jTable5.getColumnModel().getColumn(8).setWidth(0);
            jTable5.getColumnModel().getColumn(8).setMinWidth(0);
            jTable5.getColumnModel().getColumn(8).setMaxWidth(0);
            
            jTable4.getColumnModel().getColumn(10).setWidth(0);
            jTable4.getColumnModel().getColumn(10).setMinWidth(0);
            jTable4.getColumnModel().getColumn(10).setMaxWidth(0); 
            
            jTable5.getColumnModel().getColumn(10).setWidth(0);
            jTable5.getColumnModel().getColumn(10).setMinWidth(0);
            jTable5.getColumnModel().getColumn(10).setMaxWidth(0);
            

            if("REPORT".equals(command)){
                int count = 0;
                for(int i=0;i<li.size();i++){
                    LessonInfo lessoninfo = (LessonInfo) li.get(i);
                    if("none".equals(lessoninfo.books)){
                        count = count + 1;
                    }         
                }
                
                jLabel6.setText("Total number of classes booked : "+count); 
                DefaultTableModel dtm6 = new DefaultTableModel(0, 0);
                dtm6.setColumnIdentifiers(header);
                jTable6.setModel(dtm6);
                fillReportBooksData(li, dtm6);
                
            }

            if("TUTREPORT".equals(command)){
                
                jTable5.getColumnModel().getColumn(8).setWidth(0);
                jTable5.getColumnModel().getColumn(8).setMinWidth(0);
                jTable5.getColumnModel().getColumn(8).setMaxWidth(0);

                jTable5.getColumnModel().getColumn(10).setWidth(0);
                jTable5.getColumnModel().getColumn(10).setMinWidth(0);
                jTable5.getColumnModel().getColumn(10).setMaxWidth(0);                
                    
                jTable4.getColumnModel().getColumn(0).setWidth(0);
                jTable4.getColumnModel().getColumn(0).setMinWidth(0);
                jTable4.getColumnModel().getColumn(0).setMaxWidth(0);
                    
                jTable4.getColumnModel().getColumn(1).setWidth(0);
                jTable4.getColumnModel().getColumn(1).setMinWidth(0);
                jTable4.getColumnModel().getColumn(1).setMaxWidth(0);
                
                jTable5.getColumnModel().getColumn(0).setWidth(0);
                jTable5.getColumnModel().getColumn(0).setMinWidth(0);
                jTable5.getColumnModel().getColumn(0).setMaxWidth(0);
                    
                jTable5.getColumnModel().getColumn(1).setWidth(0);
                jTable5.getColumnModel().getColumn(1).setMinWidth(0);
                jTable5.getColumnModel().getColumn(1).setMaxWidth(0);
        
            }
              
            fillReportAbsenceData(li, dtm4);
            fillReportAttendanceData(li, dtm5);
           

        }
        
    }
        
    private void filltimecombobox( ){
        TableColumn dateColumn = jTable3.getColumnModel().getColumn(4);
        JComboBox comboBox = new JComboBox();
        
        String time = null;
        int hrs = 8;
        int min = 00;
        
        while(hrs<22)
        {
            
            time = hrs+":"+min;
            if(min==0)
                time = hrs+":"+min+"0";
            comboBox.addItem(time);  
            hrs++;
            if(min==00) {
              min = 30;
              hrs--;
            } else{
                min = 00;
            }  
        }

        dateColumn.setCellEditor(new DefaultCellEditor(comboBox));
    }
    
    private void getrowdata(String id,String Status){
        String status;
        int index;
        index = jTable3.getSelectedRow();
        if(index<0){
            JOptionPane.showMessageDialog(null, "Please select row");
            return;
        }

        DefaultTableModel tableModel = (DefaultTableModel) jTable3.getModel();
        Vector rowdata;
        rowdata = (Vector) tableModel.getDataVector().elementAt(jTable3.getSelectedRow());
        etcDataManager etc = new etcDataManager( );
        String stid    = (String) rowdata.get(0);
        String stdname = (String) rowdata.get(1);
        String tutor   = (String) rowdata.get(5);
        String subject = (String) rowdata.get(2);
        String date    = (String) rowdata.get(3);
        String time    = (String) rowdata.get(4);
        String hrs = time.substring(0, 2);
        String min = time.substring(time.length() - 2);
        String stdStatus    = (String) rowdata.get(6);
        String tutStatus   = (String) rowdata.get(7);
        String tutid   = (String) rowdata.get(8);
        String book   = (String) rowdata.get(9);
        String rowindex = (String) rowdata.get(10);
        String idrecg = id.substring(0,2);

        if(Status==null){
          status = "Booked";  
        } else{
          status = Status;    
        }
        
        if("18".equals(idrecg)){
            stdStatus = status;
        }else{
            tutStatus = status;
        }
        etc.changeLessonInfo(stid,stdname,subject,date,hrs,min,tutor,stdStatus,tutStatus,tutid,book,rowindex);
        
    }

    private void fillBookListData(ArrayList li,DefaultTableModel dtm) {
                
                jTable3.getColumnModel().getColumn(9).setWidth(0);
                jTable3.getColumnModel().getColumn(9).setMinWidth(0);
                jTable3.getColumnModel().getColumn(9).setMaxWidth(0); 
                
                if("19".equals(idrecg)){ 
                    jTable3.getColumnModel().getColumn(0).setWidth(0);
                    jTable3.getColumnModel().getColumn(0).setMinWidth(0);
                    jTable3.getColumnModel().getColumn(0).setMaxWidth(0);
                    jTable3.getColumnModel().getColumn(1).setWidth(0);
                    jTable3.getColumnModel().getColumn(1).setMinWidth(0);
                    jTable3.getColumnModel().getColumn(1).setMaxWidth(0); 
                }
                
                for (int i = 0; i < li.size(); i++) {
                LessonInfo lessoninfo = (LessonInfo) li.get(i);
                
                if("none".equals(lessoninfo.books))
                    dtm.addRow(new Object[] { lessoninfo.ID,     lessoninfo.name,    lessoninfo.subject,
                                          lessoninfo.date,       lessoninfo.hours+":"+lessoninfo.minutes, 
                                          lessoninfo.tutor,      lessoninfo.studentstatus,lessoninfo.tutorstatus,
                                          lessoninfo.tutorid,    lessoninfo.books, lessoninfo.index });
              
                   
               
            }
               
    }
    
        private void fillReportAttendanceData(ArrayList li,DefaultTableModel dtm) {
                int count = 0;
                int count2 = 0;
                jTable5.getColumnModel().getColumn(9).setWidth(0);
                jTable5.getColumnModel().getColumn(9).setMinWidth(0);
                jTable5.getColumnModel().getColumn(9).setMaxWidth(0);
                if("TUTREPORT".equals(command)){
                    jTable5.getColumnModel().getColumn(0).setWidth(0);
                    jTable5.getColumnModel().getColumn(0).setMinWidth(0);
                    jTable5.getColumnModel().getColumn(0).setMaxWidth(0); 
                    jTable5.getColumnModel().getColumn(6).setWidth(0);
                    jTable5.getColumnModel().getColumn(6).setMinWidth(0);
                    jTable5.getColumnModel().getColumn(6).setMaxWidth(0); 
                }

             
                for (int i = 0; i < li.size(); i++) {
                    
                    LessonInfo lessoninfo = (LessonInfo) li.get(i);
                    if(("REPORT".equals(command)) && ("Attend".equals(lessoninfo.studentstatus))){
                        count = count + 1;
                        dtm.addRow(new Object[] { lessoninfo.ID,         lessoninfo.name,    lessoninfo.subject,
                                                  lessoninfo.date,       lessoninfo.hours+":"+lessoninfo.minutes, 
                                                  lessoninfo.tutor,      lessoninfo.studentstatus,lessoninfo.tutorstatus,
                                                  lessoninfo.tutorid,    lessoninfo.books, lessoninfo.index });                    
                    }
                    
                    if(("TUTREPORT".equals(command)) && ("Attend".equals(lessoninfo.tutorstatus))){
                        count = count + 1;
                        dtm.addRow(new Object[] { lessoninfo.ID,         lessoninfo.name,    lessoninfo.subject,
                                                  lessoninfo.date,       lessoninfo.hours+":"+lessoninfo.minutes, 
                                                  lessoninfo.tutor,      lessoninfo.studentstatus,lessoninfo.tutorstatus,
                                                  lessoninfo.tutorid,    lessoninfo.books, lessoninfo.index }); 
                    }
                    
//                    if(("TUTREPORT".equals(command)) && ("none".equals(lessoninfo.books))){
//                        count2 = count2 + 1;
//                       
//                    }
                    
                    
                }
                
                jLabel2.setText("Number of Check-Ins: "+count);
               
    }
        
        private void fillReportAbsenceData(ArrayList li,DefaultTableModel dtm) {
                int count = 0;
                jTable4.getColumnModel().getColumn(9).setWidth(0);
                jTable4.getColumnModel().getColumn(9).setMinWidth(0);
                jTable4.getColumnModel().getColumn(9).setMaxWidth(0);
                
                if("TUTREPORT".equals(command)){
                    jTable4.getColumnModel().getColumn(0).setWidth(0);
                    jTable4.getColumnModel().getColumn(0).setMinWidth(0);
                    jTable4.getColumnModel().getColumn(0).setMaxWidth(0); 
                    jTable4.getColumnModel().getColumn(6).setWidth(0);
                    jTable4.getColumnModel().getColumn(6).setMinWidth(0);
                    jTable4.getColumnModel().getColumn(6).setMaxWidth(0); 
                }
                
                for (int i = 0; i < li.size(); i++) {
                    LessonInfo lessoninfo = (LessonInfo) li.get(i);
                
                    if(("REPORT".equals(command)) && ("Cancelled".equals(lessoninfo.studentstatus))){
                        count = count + 1;
                        dtm.addRow(new Object[] { lessoninfo.ID,     lessoninfo.name,    lessoninfo.subject,
                                              lessoninfo.date,       lessoninfo.hours+":"+lessoninfo.minutes, 
                                              lessoninfo.tutor,      lessoninfo.studentstatus,lessoninfo.tutorstatus,
                                              lessoninfo.tutorid,    lessoninfo.books, lessoninfo.index });
              
                    }
                    
                    if(("TUTREPORT".equals(command)) && ("Cancelled".equals(lessoninfo.tutorstatus))){
                        count = count + 1;
                        dtm.addRow(new Object[] { lessoninfo.ID,      lessoninfo.name,    lessoninfo.subject,
                                                  lessoninfo.date,    lessoninfo.hours+":"+lessoninfo.minutes, 
                                                  lessoninfo.tutor,   lessoninfo.studentstatus,lessoninfo.tutorstatus,
                                                  lessoninfo.tutorid, lessoninfo.books, lessoninfo.index }); 
                    }
                    
                    
                    
                }
                jLabel3.setText("Number of lessons cancelled : "+count);
               
    }
    
    private void fillReportBooksData(ArrayList li,DefaultTableModel dtm) {
                int count = 0;
                jLabel1.setText("Order Book List");
                //hide tutor id colum for student logon
                jTable6.getColumnModel().getColumn(4).setWidth(0);
                jTable6.getColumnModel().getColumn(4).setMinWidth(0);
                jTable6.getColumnModel().getColumn(4).setMaxWidth(0); 
                
                jTable6.getColumnModel().getColumn(5).setWidth(0);
                jTable6.getColumnModel().getColumn(5).setMinWidth(0);
                jTable6.getColumnModel().getColumn(5).setMaxWidth(0); 
                
                jTable6.getColumnModel().getColumn(6).setWidth(0);
                jTable6.getColumnModel().getColumn(6).setMinWidth(0);
                jTable6.getColumnModel().getColumn(6).setMaxWidth(0); 
                
                jTable6.getColumnModel().getColumn(7).setWidth(0);
                jTable6.getColumnModel().getColumn(7).setMinWidth(0);
                jTable6.getColumnModel().getColumn(7).setMaxWidth(0); 
                
                jTable6.getColumnModel().getColumn(8).setWidth(0);
                jTable6.getColumnModel().getColumn(8).setMinWidth(0);
                jTable6.getColumnModel().getColumn(8).setMaxWidth(0); 
                
                jTable6.getColumnModel().getColumn(10).setWidth(0);
                jTable6.getColumnModel().getColumn(10).setMinWidth(0);
                jTable6.getColumnModel().getColumn(10).setMaxWidth(0); 
                
                for (int i = 0; i < li.size(); i++) {
                    LessonInfo lessoninfo = (LessonInfo) li.get(i);
                    if(!"none".equals(lessoninfo.books)){ //only for ordered books
                        count = count + 1;
                        dtm.addRow(new Object[] { lessoninfo.ID,      lessoninfo.name,    lessoninfo.subject,
                                                  lessoninfo.date,    lessoninfo.hours+":"+lessoninfo.minutes, 
                                                  lessoninfo.tutor,   lessoninfo.studentstatus,lessoninfo.tutorstatus,
                                                  lessoninfo.tutorid, lessoninfo.books, lessoninfo.index});

                    }
                }
                jLabel4.setText("Number of books ordered : "+count);
                            

    }    

    private void fillTutorComboBox() {
       TutorsData td = new TutorsData();  
       TableColumn tutorColumn = jTable3.getColumnModel().getColumn(5);
       JComboBox comboBox = new JComboBox();
       comboBox.addItem(TutorsData.tutordata.get(0).tutorname);
       comboBox.addItem(TutorsData.tutordata.get(1).tutorname);
       comboBox.addItem(TutorsData.tutordata.get(2).tutorname);
       comboBox.addItem(TutorsData.tutordata.get(3).tutorname);
       comboBox.addItem(TutorsData.tutordata.get(4).tutorname);
       tutorColumn.setCellEditor(new DefaultCellEditor(comboBox));
       
    }

    private void fillOrderBookData(ArrayList li, DefaultTableModel dtm) {
                jLabel1.setText("Order Book List");
                //hide tutor id colum for student logon
                jTable3.getColumnModel().getColumn(4).setWidth(0);
                jTable3.getColumnModel().getColumn(4).setMinWidth(0);
                jTable3.getColumnModel().getColumn(4).setMaxWidth(0); 
                
                jTable3.getColumnModel().getColumn(5).setWidth(0);
                jTable3.getColumnModel().getColumn(5).setMinWidth(0);
                jTable3.getColumnModel().getColumn(5).setMaxWidth(0); 
                
                jTable3.getColumnModel().getColumn(6).setWidth(0);
                jTable3.getColumnModel().getColumn(6).setMinWidth(0);
                jTable3.getColumnModel().getColumn(6).setMaxWidth(0); 
                
                jTable3.getColumnModel().getColumn(7).setWidth(0);
                jTable3.getColumnModel().getColumn(7).setMinWidth(0);
                jTable3.getColumnModel().getColumn(7).setMaxWidth(0); 
                
                
                for (int i = 0; i < li.size(); i++) {
                LessonInfo lessoninfo = (LessonInfo) li.get(i);
                if(!"none".equals(lessoninfo.books)) //only for ordered books
                    dtm.addRow(new Object[] { lessoninfo.ID,      lessoninfo.name,    lessoninfo.subject,
                                              lessoninfo.date,    lessoninfo.hours+":"+lessoninfo.minutes, 
                                              lessoninfo.tutor,   lessoninfo.studentstatus,lessoninfo.tutorstatus,
                                              lessoninfo.tutorid, lessoninfo.books, lessoninfo.index});
                
            }
    }

    
        
}
